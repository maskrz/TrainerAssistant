<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.herokuapp.tassistant" />

	<context:property-placeholder
		location="classpath:/spring/configuration.properties,
		classpath:/spring/db.properties,
		classpath:/spring/email.properties" />

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="${DATABASE_URL}" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url"
			value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- <property name="persistenceUnitName" value="taPU" /> -->
		<property name="dataSource" ref="dataSource" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" />

	<aop:aspectj-autoproxy />

	<task:annotation-driven />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="${EMAIL_USER}" />
		<property name="password" value="${EMAIL_PASSWORD}" />

		<!-- The name of the property, following JavaBean naming conventions -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">false</prop>
			</props>
		</property>
	</bean>

	<sec:http auto-config="true">
		<sec:intercept-url pattern="/" access="permitAll" />
		<sec:intercept-url pattern="/registration/**"
			access="permitAll" />
		<sec:intercept-url pattern="/profile/**" access="hasRole('ROLE_USER')" />
		<sec:intercept-url pattern="/login/**" access="permitAll" />
		<sec:intercept-url pattern="/tassistant/login/**"
			access="permitAll" />

		<sec:form-login login-page="/login" default-target-url="/registration/"
			authentication-failure-url="/login/error" username-parameter="username"
			password-parameter="password" />
		<sec:logout logout-success-url="/login/logout" />
		<!-- TODO -->
		<sec:csrf disabled="true" />
	</sec:http>

	<bean id="webexpressionHandler"
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	<sec:authentication-manager>
		<sec:authentication-provider
			user-service-ref='myUserDetailsService'>
			<sec:password-encoder ref="passwordEncoder">
			</sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="myUserDetailsService"
		class="com.herokuapp.tassistant.util.security.spring.MyUserDataService" />

	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
	</bean>


</beans>
